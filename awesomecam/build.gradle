apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

buildscript {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'AwesomeCam'

    publishedGroupId = 'com.farukcankaya'
    libraryName = 'awesomecam'
    artifact = 'awesomecam'

    libraryDescription = 'Android full stack solution to handle taking, cropping, minifying image/video'

    siteUrl = 'https://github.com/farukcankaya/AwesomeCam'
    gitUrl = 'https://github.com/farukcankaya/AwesomeCam.git'

    libraryVersion = "${versionName}"

    developerId = 'farukcankaya'
    developerName = 'Faruk Cankaya'
    developerEmail = 'farukcankayaaa@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

version = "${versionName}"
group = "${publishedGroupId}"

android {
    compileSdkVersion versionSdk
    buildToolsVersion "${versionBuildTools}"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion versionMinSdk
        targetSdkVersion versionTargetSdk
        versionCode versionBuild
        versionName "${versionName}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

generateJavadocsJar.dependsOn generateJavadocs

artifacts {
    archives generateSourcesJar
    archives generateJavadocsJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            name "${publishedGroupId}"
            description "${libraryDescription}"
            url "${siteUrl}"
            inceptionYear '2017'

            packaging 'aar'
            version "${versionName}"

            scm {
                connection "${gitUrl}"
                url "${siteUrl}"

            }
            developers {
                developer {
                    name "${developerId}"
                }
            }
        }
    }
}

bintray {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apikey')
    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = developerId
        desc = libraryDescription
        publish = true
        publicDownloadNumbers = true
        licenses = ['MIT']
        labels = ['android', 'camera', 'photo', 'video']
        websiteUrl = siteUrl
        issueTrackerUrl = "${siteUrl}/issues"
        vcsUrl = gitUrl
        version {
            name = versionName
            vcsTag = versionName
            desc = 'Initial, lets party'
            released = new Date()

        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation("com.android.support.test.espresso:espresso-core:${espresso}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.anggrayudi:storage:0.13.0'

    testImplementation 'junit:junit:4.13.2'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.6.4'
}